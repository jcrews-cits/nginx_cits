name: Build NGINX Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write  # Grants permission to create releases and modify repository content

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Read version from file
        id: read_version
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version read from file: $VERSION"

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev ruby ruby-dev libxml2-dev libxslt1-dev libgd-dev libgeoip-dev
          sudo gem install fpm

      - name: Download NGINX source code
        run: |
          echo "Downloading NGINX version: $VERSION"
          curl -f -O http://nginx.org/download/nginx-$VERSION.tar.gz || { echo "Failed to download NGINX version $VERSION"; exit 1; }
          ls -l nginx-$VERSION.tar.gz
          file nginx-$VERSION.tar.gz
          tar -xzvf nginx-$VERSION.tar.gz || { echo "Extraction failed"; exit 1; }

      - name: Configure NGINX
        run: |
          cd nginx-$VERSION
          ./configure \
            --prefix=/etc/nginx \
            --sbin-path=/usr/sbin/nginx \
            --modules-path=/usr/lib/nginx/modules \
            --conf-path=/etc/nginx/nginx.conf \
            --error-log-path=/var/log/nginx/error.log \
            --http-log-path=/var/log/nginx/access.log \
            --pid-path=/var/run/nginx.pid \
            --lock-path=/var/run/nginx.lock \
            --http-client-body-temp-path=/var/cache/nginx/client_temp \
            --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
            --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
            --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
            --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
            --user=nginx \
            --group=nginx \
            --with-compat \
            --with-file-aio \
            --with-threads \
            --with-http_addition_module \
            --with-http_auth_request_module \
            --with-http_dav_module \
            --with-http_flv_module \
            --with-http_gunzip_module \
            --with-http_gzip_static_module \
            --with-http_mp4_module \
            --with-http_random_index_module \
            --with-http_realip_module \
            --with-http_secure_link_module \
            --with-http_slice_module \
            --with-http_ssl_module \
            --with-http_stub_status_module \
            --with-http_sub_module \
            --with-http_v2_module \
            --with-http_v3_module \
            --with-mail \
            --with-mail_ssl_module \
            --with-stream \
            --with-stream_realip_module \
            --with-stream_ssl_module \
            --with-stream_ssl_preread_module \
            --with-http_geoip_module=dynamic \
            --with-http_image_filter_module=dynamic \
            --with-http_xslt_module=dynamic \
            --with-http_perl_module=dynamic \

      - name: Build NGINX
        run: |
          cd nginx-$VERSION
          make
          sudo make install

      - name: Set Permissions for NGINX Directory
        run: sudo chmod -R 755 /usr/local/nginx

      - name: Create Temporary Directory
        run: mkdir -p /home/runner/work/nginx_plus/nginx_plus/tmp

      - name: Package NGINX with FPM
        run: |
          cd /usr/local/nginx
          sudo fpm -s dir -t deb -n nginx -v ${VERSION} -C /usr/local/nginx -p /home/runner/work/nginx_plus/nginx_plus/nginx-${VERSION}.deb .
        env:
          PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
          TMPDIR: /home/runner/work/nginx_plus/nginx_plus/tmp

      - name: Check if .deb Package Exists
        run: |
          ls -l /home/runner/work/nginx_plus/nginx_plus/nginx-${{ env.VERSION }}.deb || { echo "Package not found"; exit 1; }

      - name: Upload Package Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "nginx-${{ env.VERSION }}.deb"
          path: "/home/runner/work/nginx_plus/nginx_plus/nginx-${{ env.VERSION }}.deb"

#      - name: Create GitHub Release
#        id: create_release  # ID for reference in the next step
#        uses: actions/create-release@v1
#        with:
#          tag_name: v${{ env.VERSION }}
#          release_name: NGINX v${{ env.VERSION }}
#          body: Release of NGINX version ${{ env.VERSION }}
#          draft: false
#          prerelease: false
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Upload Release Asset
#        uses: actions/upload-release-asset@v1
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: /home/runner/work/nginx_plus/nginx_plus/nginx-${{ env.VERSION }}.deb
#          asset_name: nginx-${{ env.VERSION }}.deb
#          asset_content_type: application/octet-stream
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
