name: Build NGINX Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write  # Grants permission to create releases and modify repository content

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Read version from file
        id: read_version
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version read from file: $VERSION"

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev ruby ruby-dev
          sudo gem install fpm

      - name: Download NGINX source code
        run: |
          echo "Downloading NGINX version: $VERSION"
          curl -f -O http://nginx.org/download/nginx-$VERSION.tar.gz || { echo "Failed to download NGINX version $VERSION"; exit 1; }
          ls -l nginx-$VERSION.tar.gz
          file nginx-$VERSION.tar.gz
          tar -xzvf nginx-$VERSION.tar.gz || { echo "Extraction failed"; exit 1; }

      - name: Configure NGINX
        run: |
          cd nginx-$VERSION
          ./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_v2_module

      - name: Build NGINX
        run: |
          cd nginx-$VERSION
          make
          sudo make install

      - name: Package NGINX with FPM
        run: |
          fpm -s dir -t deb -n nginx -v $VERSION -C /usr/local/nginx -p nginx-$VERSION.deb
        env:
          PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

      - name: Upload Package Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "nginx-$VERSION.deb"
          path: "nginx-$VERSION.deb"  # Matches the name created by fpm

      - name: Create GitHub Release
        id: create_release  # ID for reference in the next step
        uses: actions/create-release@v1
        with:
          tag_name: "v$VERSION"
          release_name: "NGINX v$VERSION"
          body: "Release of NGINX version ${{ VERSION }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "nginx-${{ VERSION }}.deb"  # Path to the generated package file
          asset_name: "nginx-${{ VERSION }}.deb"  # Naming the asset with version number
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
